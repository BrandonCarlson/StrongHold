// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4290.TesterBot.subsystems;

import org.usfirst.frc4290.TesterBot.RobotMap;

import org.usfirst.frc4290.TesterBot.commands.*;

import edu.wpi.first.wpilibj.*;

import edu.wpi.first.wpilibj.smartdashboard.*;

import edu.wpi.first.wpilibj.command.Subsystem;


/**
 
 */
public class DriveTrain extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final SpeedController driveRightMotor = RobotMap.driveTraindriveRightMotor;
    private final SpeedController driveLeftMotor = RobotMap.driveTraindriveLeftMotor;
    private final RobotDrive robotDrive2 = RobotMap.driveTrainRobotDrive2;
    private final SpeedController driveRightOneMotor = RobotMap.driveTraindriveRightOneMotor;
    private final SpeedController driveRightTwoMotor = RobotMap.driveTraindriveRightTwoMotor;
    private final SpeedController driveLeftOneMotor = RobotMap.driveTraindriveLeftOneMotor;
    private final SpeedController driveLeftTwoMotor = RobotMap.driveTraindriveLeftTwoMotor;
    private final RobotDrive robotDrive4 = RobotMap.driveTrainRobotDrive4;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private double speedMultiplier = 0.75;
    private final double speedChange = 0.1;

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
    		setDefaultCommand(new driveWithJoySticks());
        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }
    public void speedUpDrive(){
    	if (speedMultiplier < 1.0){
    		speedMultiplier += speedChange;
    		SmartDashboard.putBoolean("Speed UP", true);
    	}
    }
    
    public void speedDownDrive(){
    	if (speedMultiplier > 0.55){
    		speedMultiplier -= speedChange;
    		SmartDashboard.putBoolean("Speed Down", true);
    	}
    }
    
    public void driveForward(){
    	robotDrive4.tankDrive(speedMultiplier, speedMultiplier);
    }
    public void driveBackwards(){
    	robotDrive4.tankDrive(-speedMultiplier, -speedMultiplier);
    }
    
    public void takeJoystickInputs(Joystick left, Joystick right){
    	SmartDashboard.putNumber("Multiplier", speedMultiplier);
    	

    	
//    	double leftvalue = left.getY() * -1 * speedMultiplier;
//    	double rightvalue = right.getY() * -1 * speedMultiplier;
    	robotDrive4.arcadeDrive(right.getY()*-1* speedMultiplier, right.getX()*-1*speedMultiplier);//.arcadeDrive(right);
    }
    public void moveForward(){
    	robotDrive4.tankDrive(0.7, 0.7);
    	
    }
    public void moveBack(){
    	robotDrive4.tankDrive(-0.7, -0.7);
    	
    }
    public void stop(){
    	robotDrive2.drive(0, 0);
    	
    }
}

